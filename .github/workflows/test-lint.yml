# This workflow will install Python dependencies, run tests, lint, and build docs
# This run for every pull request

name: Tests and Lint

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  RUSTFLAGS: "-D warnings"
  RUSTDOCFLAGS: "-D warnings"

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  build:
    timeout-minutes: 20
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v4

      - name: Cache downloaded files
        id: cache-kete
        uses: actions/cache@v4
        env:
          cache-name: cache-kete
        with:
          # kete stores all files in `~/.kete/` by default
          path: ~/.kete
          # These files are valid long term, and are not expected to change
          # between runs. So there is no need to a changing name.
          key: kete-cache

      - name: Setup Rust
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
          cache-key: ${{ runner.os }}-stable

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python3 -m pip install --upgrade pip setuptools ruff mypy types-requests numpy

      - name: Ruff Formatting
        run: |
          python3 -m ruff check

      - name: Lint with mypy
        run: |
          python3 -m mypy src/kete/

      # Build and run pytest
      - name: Build kete
        run: |
          python3 -m pip install '.[dev]' -v

      - name: Test with pytest
        run: |
          python3 -m pytest --cov-report term-missing --cov=kete

      - name: Test with cargo
        run: |
          cargo test

      - name: Cargo Docs
        run: |
          cargo doc

      # Build documentation and push artifact
      - name: Build Docs
        run: |
          cd docs
          make clean
          make doctest
          make html

      - name: Fix permissions
        run: |
          chmod -c -R +rX "docs/" | while read line; do
            echo "::warning title=Invalid file permissions automatically fixed::$line"
          done

      - name: Upload Docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: "docs"
          path: docs/html/

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: "github-pages"
          path: docs/html/

  deploy:
    needs: build
    if: success() && github.ref == 'refs/heads/main'

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write # to deploy to Pages
      id-token: write # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
